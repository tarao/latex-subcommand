\ProvidesPackage{subcommand}

\gdef\subcmd@error#1{\PackageError{subcommand}{#1}\@ehc}%
\DeclareOption{noerror}{%
  \gdef\subcmd@error#1{\PackageWarning{subcommand}{#1}}}
\ProcessOptions\relax

\gdef\name@of@cs#1{\expandafter\@cdr\string#1\@nil}

\gdef\let@by@name#1#2{\bgroup%
  \let\@ef=\expandafter%
  \edef\@nameA{#1}\edef\@nameB{#2}%
  \@ef\@ef\@ef\global\@ef\@ef\@ef\let\@ef\csname\@ef\@nameA\@ef\endcsname\@ef%
  =\csname\@nameB\endcsname%
  \egroup}

\gdef\subcmd@@prefix#1[#2]{%
  \@ifundefined{subcmd@#1@o}{%
    % bypass the original command
    \let@by@name{subcmd@#1@o}{#1}%
    \expandafter\gdef\csname #1\endcsname{\csname subcmd@#1@o\endcsname}}{}%
  % backup the original command
  \let@by@name{subcmd@#1@o@#2}{#1}%
  % replace with the prefix command
  \expandafter\gdef\csname #1\endcsname{\@ifnextchar#2%
    {\csname subcmd@#1@s@#2\endcsname}{\csname subcmd@#1@o@#2\endcsname}}%
  % subcommand handler
  \@ifundefined{subcmd@#1@s}{\expandafter%
    \gdef\csname subcmd@#1@s\endcsname##1{\csname #1##1\endcsname}}{}%
  \let@by@name{subcmd@#1@s@#2}{subcmd@#1@s}%
  % default behaviour is to raise error
  \expandafter\gdef\csname #1#2\endcsname{\bgroup%
    \edef\this@command{\expandafter\string\csname #1#2\endcsname}%
    \subcmd@error{No such command `\this@command'.}\egroup}}
\gdef\subcmd@prefix#1[#2]{%
  % setup prefix handler only if necessary
  \expandafter\@ifundefined{subcmd@#1@s@#2}{\subcmd@@prefix#1[#2]}{}}

\gdef\subcmd@split[#1]#2{\bgroup%
  \let\@ef=\expandafter%
  \edef\@prefix{\name@of@cs{#2}}%
  \@tfor\@ch:=#1\do{%
    \@ef\@ef\@ef\subcmd@prefix\@ef\@ef\@ef{\@ef\@prefix\@ef}\@ef[\@ch]%
    \edef\@prefix{\@prefix\@ch}%
  }\egroup}

\gdef\@subcommand#1[#2]{%
  % define \cmd: \cmd:a \cmd:ac \cmd:act \cmd:acti \cmd:actio \cmd:action
  \expandafter\subcmd@split\expandafter[#2]{#1}%
  % override definition of \cmd:action by specified definition body
  \expandafter\@ifundefined{subcmd@\name@of@cs{#1}#2@o}{%
    % This becomes the original command
    % and possibly overrides the error handler.
    \expandafter\l@ngrel@x\expandafter\gdef%
    \csname\name@of@cs{#1}#2\endcsname}{%
    % In this case, since we already have \cmd:action as a prefix command,
    % we cannot override \name@of@cs{#1}#2 or otherwise it disables other
    % subcommands sharing the same prefix for example \cmd:actionable.
    % So, we override the bypass command instead.
    \expandafter\l@ngrel@x\expandafter\gdef%
    \csname subcmd@\name@of@cs{#1}#2@o\endcsname}}
\gdef\@@subcommand#1#2{\@subcommand{#1}[#2]}
\gdef\@@@subcommand#1{\@ifnextchar[{\@subcommand{#1}}{\@@subcommand{#1}}}
\gdef\subcommand{\@star@or@long\@@@subcommand}

\endinput
%%
%% End of file `subcommand.sty'
